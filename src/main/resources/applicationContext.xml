<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="
    	http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        ">

	<!--4、配置Spring  -->

	<!--4.1 配置注解扫描  -->
	<context:component-scan base-package="com.edu.tjdz.geng">
		<!--4.1.1 配置不扫描被Controller注解的类（被Controller注解的类由SpringMVC来扫描）  -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<!--4.1.2 配置db.properties路径  -->
	<context:property-placeholder location="classpath:db.properties"/>

	<!--4.2 配置数据源  -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!--4.2.1 数据源四大属性放置在了db.properties文件中，使用${}来获取  -->
		<!--驱动名称-->
		<!--4.2.1 数据源四大属性放置在了db.properties文件中，使用${}来获取  -->
		<!--驱动名称-->
		<property name="driverClass" value="${jdbc.driverClass}" />
		<!--数据库url-->
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}" />
		<!--数据库用户名-->
		<property name="user" value="${jdbc.user}" />
		<!--数据库密码-->
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!--4.3 配置mybatis-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--指定mybatis配置文件路径-->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!--指定数据源（数据源是对数据库的一个封装，操作起来性能更好）-->
		<property name="dataSource" ref="dataSource"></property>
		<!--指定mappers文件所在路径-->
		<property name="mapperLocations" value="classpath:mappers/*.xml"></property>
	</bean>
	<!-- 配置mappers.xml对应的接口所在位置-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.edu.tjdz.geng.dao"></property>
	</bean>

	<!--5 配置事务管理  -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!--5.1 配置切入点和建议  -->
	<aop:config>
		<!--切入点通常为service层下的各个方法  -->
		<aop:pointcut expression="execution(* com.edu.tjdz.geng.service..*(..))" id="txPoint"/>
		<!--针对上面的切入点(pointcut-ref)，指定一个处理方式（advice-ref）。 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
	</aop:config>
	<!--5.2 配置个性化的事务处理方式  -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!--service层中以get开头的函数使用何种事务管理方式  -->
			<tx:method name="get*" read-only="true" />
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>

</beans>